{
  "rules": {
    "feed": {
      "$uid": {
        ".read": "auth.uid === $uid",
        ".write": "auth.uid === $uid",
        "$loopId": {
          ".validate": "newData.val() === true && newData.parent().parent().parent().child('loops').child($loopId).exists()"
        }
      }
    },
    "loops": {
      ".read": true,
      "$loopId": {
        ".write": "(auth.uid === newData.child('author').child('uid').val()) || (!newData.exists() && auth.uid === data.child('author').child('uid').val())" // Allow Writes and deletes
      }
    },
    "comments": {
      ".read": true,
      "$loopId": {
        ".write": "!newData.exists() && auth.uid === root.child('loops').child($loopId).child('author').child('uid').val() && !newData.parent().parent().child('loops').child($loopId).exists()", // Allow deletes from the loop owner
        ".validate": "root.child('loops').child($loopId).exists()", // Check that the loop exists
        "$commentId": {
          ".write": "auth.uid === newData.child('author').child('uid').val()"  // Can only write comments if you are the author
        }
      }
    },
    "likes": {
      ".read": true,
      "$loopId": {
        ".write": "!newData.exists() && auth.uid === root.child('loops').child($loopId).child('author').child('uid').val() && !newData.parent().parent().child('loops').child($loopId).exists()", // Allow deletes from the loop owner
        ".validate": "root.child('loops').child($loopId).exists()", // Check that the loop exists
        "$uid": {
          ".write": "auth.uid === $uid",
          ".validate": "newData.val() === now"
        }
      }
    },
    "followers": {
      ".read": true,
      "$followedUid": {
        "$followerUid": {
          ".write": "auth.uid === $followerUid", // Can only add yourself as a follower
          ".validate": "newData.val() === true && newData.parent().parent().parent().child('people').child($followerUid).child('following').child($followedUid).exists()" // Makes sure /people/.../following is in sync
        }
      }
    },
    "people": {
      ".indexOn": ["_search_index/full_name", "_search_index/reversed_full_name"],
      ".read": true,
      "$uid": {
        ".write": "auth.uid === $uid",
        "full_name": {
          ".validate": "newData.isString()"
        },
        "profile_picture": {
          ".validate": "newData.isString()"
        },
        "loops": {
          "$loopId": {
            ".validate": "newData.val() === true && newData.parent().parent().parent().parent().child('loops').child($loopId).exists()"
          }
        },
        "_search_index": {
          "full_name": {
            ".validate": "newData.isString()"
          },
          "reversed_full_name": {
            ".validate": "newData.isString()"
          }
        },
        "following": {
          "$followedUid": {
            ".validate": "newData.parent().parent().parent().parent().child('followers').child($followedUid).child($uid).val() === true" // Makes sure /followers is in sync
          }
        }
      }
    }
  }
}
